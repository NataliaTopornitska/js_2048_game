{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.getInitialState();\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.gameStatus = Game.gameStatus.idle;\n        this.score = 0;\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.state = initialState;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getEmptyTiles\",\n            value: function getEmptyTiles() {\n                var emptyTiles = [];\n                for(var x = 0; x < 4; x++){\n                    for(var y = 0; y < 4; y++)if (this.state[x][y] === 0) emptyTiles.push([\n                        x,\n                        y\n                    ]);\n                }\n                return emptyTiles;\n            }\n        },\n        {\n            key: \"generateTile\",\n            value: function generateTile() {\n                var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n                var availableTiles = this.getEmptyTiles();\n                var minTilesToAdd = Math.min(count, availableTiles.length);\n                if (!availableTiles.length) return;\n                for(var i = 0; i < minTilesToAdd; i++){\n                    var randomIndex = Math.floor(Math.random() * availableTiles.length);\n                    var _availableTiles_splice_ = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(availableTiles.splice(randomIndex, 1)[0], 2), row = _availableTiles_splice_[0], col = _availableTiles_splice_[1];\n                    this.state[row][col] = Math.random() >= 0.9 ? 4 : 2;\n                }\n                this.updateBoard();\n            }\n        },\n        {\n            key: \"updateBoard\",\n            value: function updateBoard() {\n                var _this = this;\n                var fieldRow = document.querySelectorAll(\".field-row\");\n                fieldRow.forEach(function(row, index) {\n                    row.querySelectorAll(\".field-cell\").forEach(function(cell, i) {\n                        var num = _this.state[index][i];\n                        cell.classList = \"field-cell\";\n                        cell.innerHTML = \"\";\n                        if (num === 0) return;\n                        cell.classList.add(\"field-cell--\".concat(num));\n                        cell.innerHTML = num;\n                    });\n                });\n                this.isWin();\n                this.isLose();\n            }\n        },\n        {\n            key: \"isWin\",\n            value: function isWin() {\n                var _this = this;\n                this.state.flat().some(function(tile) {\n                    if (tile === 2048) _this.gameStatus = Game.gameStatus.win;\n                });\n            }\n        },\n        {\n            key: \"isLose\",\n            value: function isLose() {\n                if (this.getEmptyTiles().length > 0) return;\n                for(var r = 0; r < 4; r++)for(var c = 0; c < 4; c++){\n                    if (r < 3 && this.state[r][c] === this.state[r + 1][c] || c < 3 && this.state[r][c] === this.state[r][c + 1]) return;\n                }\n                this.gameStatus = Game.gameStatus.lose;\n            }\n        },\n        {\n            key: \"updateState\",\n            value: function updateState(newState) {\n                if (JSON.stringify(newState) !== JSON.stringify(this.getState())) {\n                    this.state = newState;\n                    this.updateBoard();\n                    this.generateTile();\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var newState = this.getState().map(function(row) {\n                    return _this.compareAndMerge(row);\n                });\n                this.updateState(newState);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var newState = this.getState().map(function(row) {\n                    return _this.compareAndMerge((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse());\n                });\n                var reversedState = newState.map(function(row) {\n                    return row.reverse();\n                });\n                this.updateState(reversedState);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var newState = Game.getInitialState();\n                for(var c = 0; c < 4; c++){\n                    var rowFromCol = [\n                        this.state[0][c],\n                        this.state[1][c],\n                        this.state[2][c],\n                        this.state[3][c]\n                    ];\n                    rowFromCol = this.compareAndMerge(rowFromCol);\n                    for(var r = 0; r < 4; r++)newState[r][c] = rowFromCol[r];\n                }\n                this.updateState(newState);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var newState = Game.getInitialState();\n                for(var c = 0; c < 4; c++){\n                    var rowFromCol = [\n                        this.state[0][c],\n                        this.state[1][c],\n                        this.state[2][c],\n                        this.state[3][c]\n                    ];\n                    rowFromCol = this.compareAndMerge(rowFromCol.reverse());\n                    rowFromCol.reverse();\n                    for(var r = 0; r < 4; r++)newState[r][c] = rowFromCol[r];\n                }\n                this.updateState(newState);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.gameStatus;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.gameStatus = Game.gameStatus.playing;\n                this.generateTile(2);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.state = this.initialState;\n                this.gameStatus = Game.gameStatus.idle;\n                this.updateBoard();\n            }\n        },\n        {\n            key: \"filterZero\",\n            value: function filterZero(row) {\n                return row.filter(function(num) {\n                    return num !== 0;\n                });\n            }\n        },\n        {\n            key: \"compareAndMerge\",\n            value: function compareAndMerge(row) {\n                var changedRow = this.filterZero(row);\n                for(var i = 0; i < changedRow.length; i++)if (changedRow[i] === changedRow[i + 1]) {\n                    changedRow[i] += changedRow[i + 1];\n                    changedRow[i + 1] = 0;\n                    this.score += changedRow[i];\n                }\n                changedRow = this.filterZero(changedRow);\n                while(changedRow.length < 4)changedRow.push(0);\n                return changedRow;\n            }\n        }\n    ], [\n        {\n            key: \"getInitialState\",\n            value: function getInitialState() {\n                return [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"gameStatus\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messages = {\n    idle: $197cd56b15c33885$var$startMessage,\n    win: $197cd56b15c33885$var$winMessage,\n    lose: $197cd56b15c33885$var$loseMessage\n};\nfunction $197cd56b15c33885$var$showMessage() {\n    var currentStatus = $197cd56b15c33885$var$game.getStatus();\n    for(var key in $197cd56b15c33885$var$messages)if ($197cd56b15c33885$var$messages[key]) $197cd56b15c33885$var$messages[key].classList.toggle(\"hidden\", key !== currentStatus);\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$button.innerHTML = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$score.innerHTML = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$button.classList.replace(\"restart\", \"start\");\n        $197cd56b15c33885$var$button.innerHTML = \"Start\";\n    }\n    $197cd56b15c33885$var$showMessage();\n});\ndocument.addEventListener(\"keyup\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.code){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$score.innerHTML = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$showMessage();\n});\n\n})();\n//# sourceMappingURL=index.3f7e4718.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nconst messages = {\n  idle: startMessage,\n  win: winMessage,\n  lose: loseMessage,\n};\n\nfunction showMessage() {\n  const currentStatus = game.getStatus();\n\n  for (const key in messages) {\n    if (messages[key]) {\n      messages[key].classList.toggle('hidden', key !== currentStatus);\n    }\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    game.start();\n    button.classList.replace('start', 'restart');\n    button.innerHTML = 'Restart';\n  } else {\n    game.restart();\n    score.innerHTML = game.getScore();\n    button.classList.replace('restart', 'start');\n    button.innerHTML = 'Start';\n  }\n\n  showMessage();\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  score.innerHTML = game.getScore();\n\n  showMessage();\n});\n","'use strict';\n\nclass Game {\n  static gameStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  static getInitialState() {\n    return [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n\n  constructor(initialState = Game.getInitialState()) {\n    this.gameStatus = Game.gameStatus.idle;\n    this.score = 0;\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.state = initialState;\n  }\n\n  getEmptyTiles() {\n    const emptyTiles = [];\n\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (this.state[x][y] === 0) {\n          emptyTiles.push([x, y]);\n        }\n      }\n    }\n\n    return emptyTiles;\n  }\n\n  generateTile(count = 1) {\n    const availableTiles = this.getEmptyTiles();\n    const minTilesToAdd = Math.min(count, availableTiles.length);\n\n    if (!availableTiles.length) {\n      return;\n    }\n\n    for (let i = 0; i < minTilesToAdd; i++) {\n      const randomIndex = Math.floor(Math.random() * availableTiles.length);\n\n      const [row, col] = availableTiles.splice(randomIndex, 1)[0];\n\n      this.state[row][col] = Math.random() >= 0.9 ? 4 : 2;\n    }\n\n    this.updateBoard();\n  }\n\n  updateBoard() {\n    const fieldRow = document.querySelectorAll('.field-row');\n\n    fieldRow.forEach((row, index) => {\n      row.querySelectorAll('.field-cell').forEach((cell, i) => {\n        const num = this.state[index][i];\n\n        cell.classList = 'field-cell';\n        cell.innerHTML = '';\n\n        if (num === 0) {\n          return;\n        }\n\n        cell.classList.add(`field-cell--${num}`);\n        cell.innerHTML = num;\n      });\n    });\n\n    this.isWin();\n    this.isLose();\n  }\n\n  isWin() {\n    this.state.flat().some((tile) => {\n      if (tile === 2048) {\n        this.gameStatus = Game.gameStatus.win;\n      }\n    });\n  }\n\n  isLose() {\n    if (this.getEmptyTiles().length > 0) {\n      return;\n    }\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (\n          (r < 3 && this.state[r][c] === this.state[r + 1][c]) ||\n          (c < 3 && this.state[r][c] === this.state[r][c + 1])\n        ) {\n          return;\n        }\n      }\n    }\n\n    this.gameStatus = Game.gameStatus.lose;\n  }\n\n  updateState(newState) {\n    if (JSON.stringify(newState) !== JSON.stringify(this.getState())) {\n      this.state = newState;\n      this.updateBoard();\n      this.generateTile();\n    }\n  }\n\n  moveLeft() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const newState = this.getState().map((row) => this.compareAndMerge(row));\n\n    this.updateState(newState);\n  }\n\n  moveRight() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const newState = this.getState().map((row) => {\n      return this.compareAndMerge([...row].reverse());\n    });\n\n    const reversedState = newState.map((row) => row.reverse());\n\n    this.updateState(reversedState);\n  }\n\n  moveUp() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const newState = Game.getInitialState();\n\n    for (let c = 0; c < 4; c++) {\n      let rowFromCol = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      rowFromCol = this.compareAndMerge(rowFromCol);\n\n      for (let r = 0; r < 4; r++) {\n        newState[r][c] = rowFromCol[r];\n      }\n    }\n\n    this.updateState(newState);\n  }\n\n  moveDown() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const newState = Game.getInitialState();\n\n    for (let c = 0; c < 4; c++) {\n      let rowFromCol = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      rowFromCol = this.compareAndMerge(rowFromCol.reverse());\n      rowFromCol.reverse();\n\n      for (let r = 0; r < 4; r++) {\n        newState[r][c] = rowFromCol[r];\n      }\n    }\n\n    this.updateState(newState);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.gameStatus;\n  }\n\n  start() {\n    this.gameStatus = Game.gameStatus.playing;\n    this.generateTile(2);\n  }\n\n  restart() {\n    this.score = 0;\n    this.state = this.initialState;\n    this.gameStatus = Game.gameStatus.idle;\n    this.updateBoard();\n  }\n\n  filterZero(row) {\n    return row.filter((num) => num !== 0);\n  }\n\n  compareAndMerge(row) {\n    let changedRow = this.filterZero(row);\n\n    for (let i = 0; i < changedRow.length; i++) {\n      if (changedRow[i] === changedRow[i + 1]) {\n        changedRow[i] += changedRow[i + 1];\n        changedRow[i + 1] = 0;\n        this.score += changedRow[i];\n      }\n    }\n\n    changedRow = this.filterZero(changedRow);\n\n    while (changedRow.length < 4) {\n      changedRow.push(0);\n    }\n\n    return changedRow;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","value","$3d28d7f1aac198f5$var$Game","protoProps","staticProps","Game","initialState","arguments","getInitialState","instance","Constructor","TypeError","gameStatus","idle","score","JSON","parse","stringify","state","emptyTiles","x","y","push","count","availableTiles","getEmptyTiles","minTilesToAdd","Math","min","randomIndex","floor","random","_availableTiles_splice_","isArray","splice","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","row","col","updateBoard","_this","fieldRow","document","querySelectorAll","forEach","index","cell","num","classList","innerHTML","add","concat","isWin","isLose","flat","some","tile","win","r","c","lose","newState","getState","generateTile","getStatus","playing","map","compareAndMerge","updateState","reversedState","iter","reverse","rowFromCol","filter","changedRow","filterZero","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$messages","$197cd56b15c33885$var$showMessage","currentStatus","toggle","addEventListener","contains","start","replace","restart","getScore","e","code","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.3f7e4718.js.map"}